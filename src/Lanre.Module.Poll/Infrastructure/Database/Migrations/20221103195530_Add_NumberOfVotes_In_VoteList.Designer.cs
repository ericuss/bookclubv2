// <auto-generated />
using System;
using Lanre.Module.Poll.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lanre.Module.Poll.Infrastructure.Database.Migrations
{
    [DbContext(typeof(PollContext))]
    [Migration("20221103195530_Add_NumberOfVotes_In_VoteList")]
    partial class Add_NumberOfVotes_In_VoteList
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Lanre.Module.Poll.Domain.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Authors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pages")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rating")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Series")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sinopsis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Books", "library", t => t.ExcludeFromMigrations());
                });

            modelBuilder.Entity("Lanre.Module.Poll.Domain.BookOfVoteList", b =>
                {
                    b.Property<Guid>("BookId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VoteListId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BloquedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReadedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Votes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookId", "VoteListId");

                    b.HasIndex("VoteListId");

                    b.ToTable("BooksOfVoteList", "Poll");

                    b.HasData(
                        new
                        {
                            BookId = new Guid("8bddba00-f200-402d-b45b-6f1634a5f622"),
                            VoteListId = new Guid("8bddba00-f200-402d-b45b-6f1634a5f622"),
                            BloquedBy = "",
                            ReadedBy = "",
                            Votes = ""
                        },
                        new
                        {
                            BookId = new Guid("8bddba00-f200-402d-b45b-6f1634a5f622"),
                            VoteListId = new Guid("332fb5ab-2eab-4393-a920-9b46faed3cb5"),
                            BloquedBy = "",
                            ReadedBy = "",
                            Votes = ""
                        },
                        new
                        {
                            BookId = new Guid("332fb5ab-2eab-4393-a920-9b46faed3cb5"),
                            VoteListId = new Guid("332fb5ab-2eab-4393-a920-9b46faed3cb5"),
                            BloquedBy = "",
                            ReadedBy = "",
                            Votes = ""
                        });
                });

            modelBuilder.Entity("Lanre.Module.Poll.Domain.VoteList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("NumberOfVotes")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("VoteList", "Poll");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8bddba00-f200-402d-b45b-6f1634a5f622"),
                            Name = "May 2022 Poll",
                            NumberOfVotes = 1,
                            UserId = "0000000000"
                        },
                        new
                        {
                            Id = new Guid("332fb5ab-2eab-4393-a920-9b46faed3cb5"),
                            Name = "June 2022 Poll",
                            NumberOfVotes = 2,
                            UserId = "0000000000"
                        });
                });

            modelBuilder.Entity("Lanre.Module.Poll.Domain.BookOfVoteList", b =>
                {
                    b.HasOne("Lanre.Module.Poll.Domain.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lanre.Module.Poll.Domain.VoteList", "VoteList")
                        .WithMany("Books")
                        .HasForeignKey("VoteListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("VoteList");
                });

            modelBuilder.Entity("Lanre.Module.Poll.Domain.VoteList", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
